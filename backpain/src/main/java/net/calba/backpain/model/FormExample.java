package net.calba.backpain.model;

import java.util.ArrayList;
import java.util.List;

public class FormExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table form
     *
     * @mbggenerated Wed May 22 17:15:02 PKT 2013
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table form
     *
     * @mbggenerated Wed May 22 17:15:02 PKT 2013
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table form
     *
     * @mbggenerated Wed May 22 17:15:02 PKT 2013
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table form
     *
     * @mbggenerated Wed May 22 17:15:02 PKT 2013
     */
    public FormExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table form
     *
     * @mbggenerated Wed May 22 17:15:02 PKT 2013
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table form
     *
     * @mbggenerated Wed May 22 17:15:02 PKT 2013
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table form
     *
     * @mbggenerated Wed May 22 17:15:02 PKT 2013
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table form
     *
     * @mbggenerated Wed May 22 17:15:02 PKT 2013
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table form
     *
     * @mbggenerated Wed May 22 17:15:02 PKT 2013
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table form
     *
     * @mbggenerated Wed May 22 17:15:02 PKT 2013
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table form
     *
     * @mbggenerated Wed May 22 17:15:02 PKT 2013
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table form
     *
     * @mbggenerated Wed May 22 17:15:02 PKT 2013
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table form
     *
     * @mbggenerated Wed May 22 17:15:02 PKT 2013
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table form
     *
     * @mbggenerated Wed May 22 17:15:02 PKT 2013
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table form
     *
     * @mbggenerated Wed May 22 17:15:02 PKT 2013
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andFormidIsNull() {
            addCriterion("formid is null");
            return (Criteria) this;
        }

        public Criteria andFormidIsNotNull() {
            addCriterion("formid is not null");
            return (Criteria) this;
        }

        public Criteria andFormidEqualTo(Integer value) {
            addCriterion("formid =", value, "formid");
            return (Criteria) this;
        }

        public Criteria andFormidNotEqualTo(Integer value) {
            addCriterion("formid <>", value, "formid");
            return (Criteria) this;
        }

        public Criteria andFormidGreaterThan(Integer value) {
            addCriterion("formid >", value, "formid");
            return (Criteria) this;
        }

        public Criteria andFormidGreaterThanOrEqualTo(Integer value) {
            addCriterion("formid >=", value, "formid");
            return (Criteria) this;
        }

        public Criteria andFormidLessThan(Integer value) {
            addCriterion("formid <", value, "formid");
            return (Criteria) this;
        }

        public Criteria andFormidLessThanOrEqualTo(Integer value) {
            addCriterion("formid <=", value, "formid");
            return (Criteria) this;
        }

        public Criteria andFormidIn(List<Integer> values) {
            addCriterion("formid in", values, "formid");
            return (Criteria) this;
        }

        public Criteria andFormidNotIn(List<Integer> values) {
            addCriterion("formid not in", values, "formid");
            return (Criteria) this;
        }

        public Criteria andFormidBetween(Integer value1, Integer value2) {
            addCriterion("formid between", value1, value2, "formid");
            return (Criteria) this;
        }

        public Criteria andFormidNotBetween(Integer value1, Integer value2) {
            addCriterion("formid not between", value1, value2, "formid");
            return (Criteria) this;
        }

        public Criteria andFormnameIsNull() {
            addCriterion("formname is null");
            return (Criteria) this;
        }

        public Criteria andFormnameIsNotNull() {
            addCriterion("formname is not null");
            return (Criteria) this;
        }

        public Criteria andFormnameEqualTo(String value) {
            addCriterion("formname =", value, "formname");
            return (Criteria) this;
        }

        public Criteria andFormnameNotEqualTo(String value) {
            addCriterion("formname <>", value, "formname");
            return (Criteria) this;
        }

        public Criteria andFormnameGreaterThan(String value) {
            addCriterion("formname >", value, "formname");
            return (Criteria) this;
        }

        public Criteria andFormnameGreaterThanOrEqualTo(String value) {
            addCriterion("formname >=", value, "formname");
            return (Criteria) this;
        }

        public Criteria andFormnameLessThan(String value) {
            addCriterion("formname <", value, "formname");
            return (Criteria) this;
        }

        public Criteria andFormnameLessThanOrEqualTo(String value) {
            addCriterion("formname <=", value, "formname");
            return (Criteria) this;
        }

        public Criteria andFormnameLike(String value) {
            addCriterion("formname like", value, "formname");
            return (Criteria) this;
        }

        public Criteria andFormnameNotLike(String value) {
            addCriterion("formname not like", value, "formname");
            return (Criteria) this;
        }

        public Criteria andFormnameIn(List<String> values) {
            addCriterion("formname in", values, "formname");
            return (Criteria) this;
        }

        public Criteria andFormnameNotIn(List<String> values) {
            addCriterion("formname not in", values, "formname");
            return (Criteria) this;
        }

        public Criteria andFormnameBetween(String value1, String value2) {
            addCriterion("formname between", value1, value2, "formname");
            return (Criteria) this;
        }

        public Criteria andFormnameNotBetween(String value1, String value2) {
            addCriterion("formname not between", value1, value2, "formname");
            return (Criteria) this;
        }

        public Criteria andFormtypeIsNull() {
            addCriterion("formtype is null");
            return (Criteria) this;
        }

        public Criteria andFormtypeIsNotNull() {
            addCriterion("formtype is not null");
            return (Criteria) this;
        }

        public Criteria andFormtypeEqualTo(String value) {
            addCriterion("formtype =", value, "formtype");
            return (Criteria) this;
        }

        public Criteria andFormtypeNotEqualTo(String value) {
            addCriterion("formtype <>", value, "formtype");
            return (Criteria) this;
        }

        public Criteria andFormtypeGreaterThan(String value) {
            addCriterion("formtype >", value, "formtype");
            return (Criteria) this;
        }

        public Criteria andFormtypeGreaterThanOrEqualTo(String value) {
            addCriterion("formtype >=", value, "formtype");
            return (Criteria) this;
        }

        public Criteria andFormtypeLessThan(String value) {
            addCriterion("formtype <", value, "formtype");
            return (Criteria) this;
        }

        public Criteria andFormtypeLessThanOrEqualTo(String value) {
            addCriterion("formtype <=", value, "formtype");
            return (Criteria) this;
        }

        public Criteria andFormtypeLike(String value) {
            addCriterion("formtype like", value, "formtype");
            return (Criteria) this;
        }

        public Criteria andFormtypeNotLike(String value) {
            addCriterion("formtype not like", value, "formtype");
            return (Criteria) this;
        }

        public Criteria andFormtypeIn(List<String> values) {
            addCriterion("formtype in", values, "formtype");
            return (Criteria) this;
        }

        public Criteria andFormtypeNotIn(List<String> values) {
            addCriterion("formtype not in", values, "formtype");
            return (Criteria) this;
        }

        public Criteria andFormtypeBetween(String value1, String value2) {
            addCriterion("formtype between", value1, value2, "formtype");
            return (Criteria) this;
        }

        public Criteria andFormtypeNotBetween(String value1, String value2) {
            addCriterion("formtype not between", value1, value2, "formtype");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table form
     *
     * @mbggenerated do_not_delete_during_merge Wed May 22 17:15:02 PKT 2013
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table form
     *
     * @mbggenerated Wed May 22 17:15:02 PKT 2013
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}