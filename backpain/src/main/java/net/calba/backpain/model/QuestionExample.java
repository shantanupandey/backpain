package net.calba.backpain.model;

import java.util.ArrayList;
import java.util.List;

public class QuestionExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table calba.question
     *
     * @mbggenerated Mon Nov 04 19:28:27 PKT 2013
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table calba.question
     *
     * @mbggenerated Mon Nov 04 19:28:27 PKT 2013
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table calba.question
     *
     * @mbggenerated Mon Nov 04 19:28:27 PKT 2013
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table calba.question
     *
     * @mbggenerated Mon Nov 04 19:28:27 PKT 2013
     */
    public QuestionExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table calba.question
     *
     * @mbggenerated Mon Nov 04 19:28:27 PKT 2013
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table calba.question
     *
     * @mbggenerated Mon Nov 04 19:28:27 PKT 2013
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table calba.question
     *
     * @mbggenerated Mon Nov 04 19:28:27 PKT 2013
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table calba.question
     *
     * @mbggenerated Mon Nov 04 19:28:27 PKT 2013
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table calba.question
     *
     * @mbggenerated Mon Nov 04 19:28:27 PKT 2013
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table calba.question
     *
     * @mbggenerated Mon Nov 04 19:28:27 PKT 2013
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table calba.question
     *
     * @mbggenerated Mon Nov 04 19:28:27 PKT 2013
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table calba.question
     *
     * @mbggenerated Mon Nov 04 19:28:27 PKT 2013
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table calba.question
     *
     * @mbggenerated Mon Nov 04 19:28:27 PKT 2013
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table calba.question
     *
     * @mbggenerated Mon Nov 04 19:28:27 PKT 2013
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table calba.question
     *
     * @mbggenerated Mon Nov 04 19:28:27 PKT 2013
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andQuestionIdIsNull() {
            addCriterion("questionid is null");
            return (Criteria) this;
        }

        public Criteria andQuestionIdIsNotNull() {
            addCriterion("questionid is not null");
            return (Criteria) this;
        }

        public Criteria andQuestionIdEqualTo(Integer value) {
            addCriterion("questionid =", value, "questionId");
            return (Criteria) this;
        }

        public Criteria andQuestionIdNotEqualTo(Integer value) {
            addCriterion("questionid <>", value, "questionId");
            return (Criteria) this;
        }

        public Criteria andQuestionIdGreaterThan(Integer value) {
            addCriterion("questionid >", value, "questionId");
            return (Criteria) this;
        }

        public Criteria andQuestionIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("questionid >=", value, "questionId");
            return (Criteria) this;
        }

        public Criteria andQuestionIdLessThan(Integer value) {
            addCriterion("questionid <", value, "questionId");
            return (Criteria) this;
        }

        public Criteria andQuestionIdLessThanOrEqualTo(Integer value) {
            addCriterion("questionid <=", value, "questionId");
            return (Criteria) this;
        }

        public Criteria andQuestionIdIn(List<Integer> values) {
            addCriterion("questionid in", values, "questionId");
            return (Criteria) this;
        }

        public Criteria andQuestionIdNotIn(List<Integer> values) {
            addCriterion("questionid not in", values, "questionId");
            return (Criteria) this;
        }

        public Criteria andQuestionIdBetween(Integer value1, Integer value2) {
            addCriterion("questionid between", value1, value2, "questionId");
            return (Criteria) this;
        }

        public Criteria andQuestionIdNotBetween(Integer value1, Integer value2) {
            addCriterion("questionid not between", value1, value2, "questionId");
            return (Criteria) this;
        }

        public Criteria andFormIdIsNull() {
            addCriterion("formid is null");
            return (Criteria) this;
        }

        public Criteria andFormIdIsNotNull() {
            addCriterion("formid is not null");
            return (Criteria) this;
        }

        public Criteria andFormIdEqualTo(Integer value) {
            addCriterion("formid =", value, "formId");
            return (Criteria) this;
        }

        public Criteria andFormIdNotEqualTo(Integer value) {
            addCriterion("formid <>", value, "formId");
            return (Criteria) this;
        }

        public Criteria andFormIdGreaterThan(Integer value) {
            addCriterion("formid >", value, "formId");
            return (Criteria) this;
        }

        public Criteria andFormIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("formid >=", value, "formId");
            return (Criteria) this;
        }

        public Criteria andFormIdLessThan(Integer value) {
            addCriterion("formid <", value, "formId");
            return (Criteria) this;
        }

        public Criteria andFormIdLessThanOrEqualTo(Integer value) {
            addCriterion("formid <=", value, "formId");
            return (Criteria) this;
        }

        public Criteria andFormIdIn(List<Integer> values) {
            addCriterion("formid in", values, "formId");
            return (Criteria) this;
        }

        public Criteria andFormIdNotIn(List<Integer> values) {
            addCriterion("formid not in", values, "formId");
            return (Criteria) this;
        }

        public Criteria andFormIdBetween(Integer value1, Integer value2) {
            addCriterion("formid between", value1, value2, "formId");
            return (Criteria) this;
        }

        public Criteria andFormIdNotBetween(Integer value1, Integer value2) {
            addCriterion("formid not between", value1, value2, "formId");
            return (Criteria) this;
        }

        public Criteria andQuestionTextIsNull() {
            addCriterion("questiontext is null");
            return (Criteria) this;
        }

        public Criteria andQuestionTextIsNotNull() {
            addCriterion("questiontext is not null");
            return (Criteria) this;
        }

        public Criteria andQuestionTextEqualTo(String value) {
            addCriterion("questiontext =", value, "questionText");
            return (Criteria) this;
        }

        public Criteria andQuestionTextNotEqualTo(String value) {
            addCriterion("questiontext <>", value, "questionText");
            return (Criteria) this;
        }

        public Criteria andQuestionTextGreaterThan(String value) {
            addCriterion("questiontext >", value, "questionText");
            return (Criteria) this;
        }

        public Criteria andQuestionTextGreaterThanOrEqualTo(String value) {
            addCriterion("questiontext >=", value, "questionText");
            return (Criteria) this;
        }

        public Criteria andQuestionTextLessThan(String value) {
            addCriterion("questiontext <", value, "questionText");
            return (Criteria) this;
        }

        public Criteria andQuestionTextLessThanOrEqualTo(String value) {
            addCriterion("questiontext <=", value, "questionText");
            return (Criteria) this;
        }

        public Criteria andQuestionTextLike(String value) {
            addCriterion("questiontext like", value, "questionText");
            return (Criteria) this;
        }

        public Criteria andQuestionTextNotLike(String value) {
            addCriterion("questiontext not like", value, "questionText");
            return (Criteria) this;
        }

        public Criteria andQuestionTextIn(List<String> values) {
            addCriterion("questiontext in", values, "questionText");
            return (Criteria) this;
        }

        public Criteria andQuestionTextNotIn(List<String> values) {
            addCriterion("questiontext not in", values, "questionText");
            return (Criteria) this;
        }

        public Criteria andQuestionTextBetween(String value1, String value2) {
            addCriterion("questiontext between", value1, value2, "questionText");
            return (Criteria) this;
        }

        public Criteria andQuestionTextNotBetween(String value1, String value2) {
            addCriterion("questiontext not between", value1, value2, "questionText");
            return (Criteria) this;
        }

        public Criteria andAnswerTypeIsNull() {
            addCriterion("answertype is null");
            return (Criteria) this;
        }

        public Criteria andAnswerTypeIsNotNull() {
            addCriterion("answertype is not null");
            return (Criteria) this;
        }

        public Criteria andAnswerTypeEqualTo(String value) {
            addCriterion("answertype =", value, "answerType");
            return (Criteria) this;
        }

        public Criteria andAnswerTypeNotEqualTo(String value) {
            addCriterion("answertype <>", value, "answerType");
            return (Criteria) this;
        }

        public Criteria andAnswerTypeGreaterThan(String value) {
            addCriterion("answertype >", value, "answerType");
            return (Criteria) this;
        }

        public Criteria andAnswerTypeGreaterThanOrEqualTo(String value) {
            addCriterion("answertype >=", value, "answerType");
            return (Criteria) this;
        }

        public Criteria andAnswerTypeLessThan(String value) {
            addCriterion("answertype <", value, "answerType");
            return (Criteria) this;
        }

        public Criteria andAnswerTypeLessThanOrEqualTo(String value) {
            addCriterion("answertype <=", value, "answerType");
            return (Criteria) this;
        }

        public Criteria andAnswerTypeLike(String value) {
            addCriterion("answertype like", value, "answerType");
            return (Criteria) this;
        }

        public Criteria andAnswerTypeNotLike(String value) {
            addCriterion("answertype not like", value, "answerType");
            return (Criteria) this;
        }

        public Criteria andAnswerTypeIn(List<String> values) {
            addCriterion("answertype in", values, "answerType");
            return (Criteria) this;
        }

        public Criteria andAnswerTypeNotIn(List<String> values) {
            addCriterion("answertype not in", values, "answerType");
            return (Criteria) this;
        }

        public Criteria andAnswerTypeBetween(String value1, String value2) {
            addCriterion("answertype between", value1, value2, "answerType");
            return (Criteria) this;
        }

        public Criteria andAnswerTypeNotBetween(String value1, String value2) {
            addCriterion("answertype not between", value1, value2, "answerType");
            return (Criteria) this;
        }

        public Criteria andParentEntityIdIsNull() {
            addCriterion("parententityid is null");
            return (Criteria) this;
        }

        public Criteria andParentEntityIdIsNotNull() {
            addCriterion("parententityid is not null");
            return (Criteria) this;
        }

        public Criteria andParentEntityIdEqualTo(Integer value) {
            addCriterion("parententityid =", value, "parentEntityId");
            return (Criteria) this;
        }

        public Criteria andParentEntityIdNotEqualTo(Integer value) {
            addCriterion("parententityid <>", value, "parentEntityId");
            return (Criteria) this;
        }

        public Criteria andParentEntityIdGreaterThan(Integer value) {
            addCriterion("parententityid >", value, "parentEntityId");
            return (Criteria) this;
        }

        public Criteria andParentEntityIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("parententityid >=", value, "parentEntityId");
            return (Criteria) this;
        }

        public Criteria andParentEntityIdLessThan(Integer value) {
            addCriterion("parententityid <", value, "parentEntityId");
            return (Criteria) this;
        }

        public Criteria andParentEntityIdLessThanOrEqualTo(Integer value) {
            addCriterion("parententityid <=", value, "parentEntityId");
            return (Criteria) this;
        }

        public Criteria andParentEntityIdIn(List<Integer> values) {
            addCriterion("parententityid in", values, "parentEntityId");
            return (Criteria) this;
        }

        public Criteria andParentEntityIdNotIn(List<Integer> values) {
            addCriterion("parententityid not in", values, "parentEntityId");
            return (Criteria) this;
        }

        public Criteria andParentEntityIdBetween(Integer value1, Integer value2) {
            addCriterion("parententityid between", value1, value2, "parentEntityId");
            return (Criteria) this;
        }

        public Criteria andParentEntityIdNotBetween(Integer value1, Integer value2) {
            addCriterion("parententityid not between", value1, value2, "parentEntityId");
            return (Criteria) this;
        }

        public Criteria andMinScoreIsNull() {
            addCriterion("min_score is null");
            return (Criteria) this;
        }

        public Criteria andMinScoreIsNotNull() {
            addCriterion("min_score is not null");
            return (Criteria) this;
        }

        public Criteria andMinScoreEqualTo(Integer value) {
            addCriterion("min_score =", value, "minScore");
            return (Criteria) this;
        }

        public Criteria andMinScoreNotEqualTo(Integer value) {
            addCriterion("min_score <>", value, "minScore");
            return (Criteria) this;
        }

        public Criteria andMinScoreGreaterThan(Integer value) {
            addCriterion("min_score >", value, "minScore");
            return (Criteria) this;
        }

        public Criteria andMinScoreGreaterThanOrEqualTo(Integer value) {
            addCriterion("min_score >=", value, "minScore");
            return (Criteria) this;
        }

        public Criteria andMinScoreLessThan(Integer value) {
            addCriterion("min_score <", value, "minScore");
            return (Criteria) this;
        }

        public Criteria andMinScoreLessThanOrEqualTo(Integer value) {
            addCriterion("min_score <=", value, "minScore");
            return (Criteria) this;
        }

        public Criteria andMinScoreIn(List<Integer> values) {
            addCriterion("min_score in", values, "minScore");
            return (Criteria) this;
        }

        public Criteria andMinScoreNotIn(List<Integer> values) {
            addCriterion("min_score not in", values, "minScore");
            return (Criteria) this;
        }

        public Criteria andMinScoreBetween(Integer value1, Integer value2) {
            addCriterion("min_score between", value1, value2, "minScore");
            return (Criteria) this;
        }

        public Criteria andMinScoreNotBetween(Integer value1, Integer value2) {
            addCriterion("min_score not between", value1, value2, "minScore");
            return (Criteria) this;
        }

        public Criteria andMaxScoreIsNull() {
            addCriterion("max_score is null");
            return (Criteria) this;
        }

        public Criteria andMaxScoreIsNotNull() {
            addCriterion("max_score is not null");
            return (Criteria) this;
        }

        public Criteria andMaxScoreEqualTo(Integer value) {
            addCriterion("max_score =", value, "maxScore");
            return (Criteria) this;
        }

        public Criteria andMaxScoreNotEqualTo(Integer value) {
            addCriterion("max_score <>", value, "maxScore");
            return (Criteria) this;
        }

        public Criteria andMaxScoreGreaterThan(Integer value) {
            addCriterion("max_score >", value, "maxScore");
            return (Criteria) this;
        }

        public Criteria andMaxScoreGreaterThanOrEqualTo(Integer value) {
            addCriterion("max_score >=", value, "maxScore");
            return (Criteria) this;
        }

        public Criteria andMaxScoreLessThan(Integer value) {
            addCriterion("max_score <", value, "maxScore");
            return (Criteria) this;
        }

        public Criteria andMaxScoreLessThanOrEqualTo(Integer value) {
            addCriterion("max_score <=", value, "maxScore");
            return (Criteria) this;
        }

        public Criteria andMaxScoreIn(List<Integer> values) {
            addCriterion("max_score in", values, "maxScore");
            return (Criteria) this;
        }

        public Criteria andMaxScoreNotIn(List<Integer> values) {
            addCriterion("max_score not in", values, "maxScore");
            return (Criteria) this;
        }

        public Criteria andMaxScoreBetween(Integer value1, Integer value2) {
            addCriterion("max_score between", value1, value2, "maxScore");
            return (Criteria) this;
        }

        public Criteria andMaxScoreNotBetween(Integer value1, Integer value2) {
            addCriterion("max_score not between", value1, value2, "maxScore");
            return (Criteria) this;
        }

        public Criteria andQuestionGroupIdIsNull() {
            addCriterion("questiongroupid is null");
            return (Criteria) this;
        }

        public Criteria andQuestionGroupIdIsNotNull() {
            addCriterion("questiongroupid is not null");
            return (Criteria) this;
        }

        public Criteria andQuestionGroupIdEqualTo(Integer value) {
            addCriterion("questiongroupid =", value, "questionGroupId");
            return (Criteria) this;
        }

        public Criteria andQuestionGroupIdNotEqualTo(Integer value) {
            addCriterion("questiongroupid <>", value, "questionGroupId");
            return (Criteria) this;
        }

        public Criteria andQuestionGroupIdGreaterThan(Integer value) {
            addCriterion("questiongroupid >", value, "questionGroupId");
            return (Criteria) this;
        }

        public Criteria andQuestionGroupIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("questiongroupid >=", value, "questionGroupId");
            return (Criteria) this;
        }

        public Criteria andQuestionGroupIdLessThan(Integer value) {
            addCriterion("questiongroupid <", value, "questionGroupId");
            return (Criteria) this;
        }

        public Criteria andQuestionGroupIdLessThanOrEqualTo(Integer value) {
            addCriterion("questiongroupid <=", value, "questionGroupId");
            return (Criteria) this;
        }

        public Criteria andQuestionGroupIdIn(List<Integer> values) {
            addCriterion("questiongroupid in", values, "questionGroupId");
            return (Criteria) this;
        }

        public Criteria andQuestionGroupIdNotIn(List<Integer> values) {
            addCriterion("questiongroupid not in", values, "questionGroupId");
            return (Criteria) this;
        }

        public Criteria andQuestionGroupIdBetween(Integer value1, Integer value2) {
            addCriterion("questiongroupid between", value1, value2, "questionGroupId");
            return (Criteria) this;
        }

        public Criteria andQuestionGroupIdNotBetween(Integer value1, Integer value2) {
            addCriterion("questiongroupid not between", value1, value2, "questionGroupId");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table calba.question
     *
     * @mbggenerated do_not_delete_during_merge Mon Nov 04 19:28:27 PKT 2013
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table calba.question
     *
     * @mbggenerated Mon Nov 04 19:28:27 PKT 2013
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}