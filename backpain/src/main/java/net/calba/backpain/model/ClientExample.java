package net.calba.backpain.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class ClientExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table client
     *
     * @mbggenerated Wed May 22 17:15:02 PKT 2013
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table client
     *
     * @mbggenerated Wed May 22 17:15:02 PKT 2013
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table client
     *
     * @mbggenerated Wed May 22 17:15:02 PKT 2013
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table client
     *
     * @mbggenerated Wed May 22 17:15:02 PKT 2013
     */
    public ClientExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table client
     *
     * @mbggenerated Wed May 22 17:15:02 PKT 2013
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table client
     *
     * @mbggenerated Wed May 22 17:15:02 PKT 2013
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table client
     *
     * @mbggenerated Wed May 22 17:15:02 PKT 2013
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table client
     *
     * @mbggenerated Wed May 22 17:15:02 PKT 2013
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table client
     *
     * @mbggenerated Wed May 22 17:15:02 PKT 2013
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table client
     *
     * @mbggenerated Wed May 22 17:15:02 PKT 2013
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table client
     *
     * @mbggenerated Wed May 22 17:15:02 PKT 2013
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table client
     *
     * @mbggenerated Wed May 22 17:15:02 PKT 2013
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table client
     *
     * @mbggenerated Wed May 22 17:15:02 PKT 2013
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table client
     *
     * @mbggenerated Wed May 22 17:15:02 PKT 2013
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table client
     *
     * @mbggenerated Wed May 22 17:15:02 PKT 2013
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andClientIdIsNull() {
            addCriterion("clinetid is null");
            return (Criteria) this;
        }

        public Criteria andClientIdIsNotNull() {
            addCriterion("clinetid is not null");
            return (Criteria) this;
        }

        public Criteria andClientIdEqualTo(Integer value) {
            addCriterion("clinetid =", value, "clientId");
            return (Criteria) this;
        }

        public Criteria andClientIdNotEqualTo(Integer value) {
            addCriterion("clinetid <>", value, "clientId");
            return (Criteria) this;
        }

        public Criteria andClientIdGreaterThan(Integer value) {
            addCriterion("clinetid >", value, "clientId");
            return (Criteria) this;
        }

        public Criteria andClientIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("clinetid >=", value, "clientId");
            return (Criteria) this;
        }

        public Criteria andClientIdLessThan(Integer value) {
            addCriterion("clinetid <", value, "clientId");
            return (Criteria) this;
        }

        public Criteria andClientIdLessThanOrEqualTo(Integer value) {
            addCriterion("clinetid <=", value, "clientId");
            return (Criteria) this;
        }

        public Criteria andClientIdIn(List<Integer> values) {
            addCriterion("clinetid in", values, "clientId");
            return (Criteria) this;
        }

        public Criteria andClientIdNotIn(List<Integer> values) {
            addCriterion("clinetid not in", values, "clientId");
            return (Criteria) this;
        }

        public Criteria andClientIdBetween(Integer value1, Integer value2) {
            addCriterion("clinetid between", value1, value2, "clientId");
            return (Criteria) this;
        }

        public Criteria andClientIdNotBetween(Integer value1, Integer value2) {
            addCriterion("clinetid not between", value1, value2, "clientId");
            return (Criteria) this;
        }

        public Criteria andForeNameIsNull() {
            addCriterion("forename is null");
            return (Criteria) this;
        }

        public Criteria andForeNameIsNotNull() {
            addCriterion("forename is not null");
            return (Criteria) this;
        }

        public Criteria andForeNameEqualTo(String value) {
            addCriterion("forename =", value, "foreName");
            return (Criteria) this;
        }

        public Criteria andForeNameNotEqualTo(String value) {
            addCriterion("forename <>", value, "foreName");
            return (Criteria) this;
        }

        public Criteria andForeNameGreaterThan(String value) {
            addCriterion("forename >", value, "foreName");
            return (Criteria) this;
        }

        public Criteria andForeNameGreaterThanOrEqualTo(String value) {
            addCriterion("forename >=", value, "foreName");
            return (Criteria) this;
        }

        public Criteria andForeNameLessThan(String value) {
            addCriterion("forename <", value, "foreName");
            return (Criteria) this;
        }

        public Criteria andForeNameLessThanOrEqualTo(String value) {
            addCriterion("forename <=", value, "foreName");
            return (Criteria) this;
        }

        public Criteria andForeNameLike(String value) {
            addCriterion("forename like", value, "foreName");
            return (Criteria) this;
        }

        public Criteria andForeNameNotLike(String value) {
            addCriterion("forename not like", value, "foreName");
            return (Criteria) this;
        }

        public Criteria andForeNameIn(List<String> values) {
            addCriterion("forename in", values, "foreName");
            return (Criteria) this;
        }

        public Criteria andForeNameNotIn(List<String> values) {
            addCriterion("forename not in", values, "foreName");
            return (Criteria) this;
        }

        public Criteria andForeNameBetween(String value1, String value2) {
            addCriterion("forename between", value1, value2, "foreName");
            return (Criteria) this;
        }

        public Criteria andForeNameNotBetween(String value1, String value2) {
            addCriterion("forename not between", value1, value2, "foreName");
            return (Criteria) this;
        }

        public Criteria andSurNameIsNull() {
            addCriterion("surname is null");
            return (Criteria) this;
        }

        public Criteria andSurNameIsNotNull() {
            addCriterion("surname is not null");
            return (Criteria) this;
        }

        public Criteria andSurNameEqualTo(String value) {
            addCriterion("surname =", value, "surName");
            return (Criteria) this;
        }

        public Criteria andSurNameNotEqualTo(String value) {
            addCriterion("surname <>", value, "surName");
            return (Criteria) this;
        }

        public Criteria andSurNameGreaterThan(String value) {
            addCriterion("surname >", value, "surName");
            return (Criteria) this;
        }

        public Criteria andSurNameGreaterThanOrEqualTo(String value) {
            addCriterion("surname >=", value, "surName");
            return (Criteria) this;
        }

        public Criteria andSurNameLessThan(String value) {
            addCriterion("surname <", value, "surName");
            return (Criteria) this;
        }

        public Criteria andSurNameLessThanOrEqualTo(String value) {
            addCriterion("surname <=", value, "surName");
            return (Criteria) this;
        }

        public Criteria andSurNameLike(String value) {
            addCriterion("surname like", value, "surName");
            return (Criteria) this;
        }

        public Criteria andSurNameNotLike(String value) {
            addCriterion("surname not like", value, "surName");
            return (Criteria) this;
        }

        public Criteria andSurNameIn(List<String> values) {
            addCriterion("surname in", values, "surName");
            return (Criteria) this;
        }

        public Criteria andSurNameNotIn(List<String> values) {
            addCriterion("surname not in", values, "surName");
            return (Criteria) this;
        }

        public Criteria andSurNameBetween(String value1, String value2) {
            addCriterion("surname between", value1, value2, "surName");
            return (Criteria) this;
        }

        public Criteria andSurNameNotBetween(String value1, String value2) {
            addCriterion("surname not between", value1, value2, "surName");
            return (Criteria) this;
        }

        public Criteria andDateOfBirthIsNull() {
            addCriterion("dateofbirth is null");
            return (Criteria) this;
        }

        public Criteria andDateOfBirthIsNotNull() {
            addCriterion("dateofbirth is not null");
            return (Criteria) this;
        }

        public Criteria andDateOfBirthEqualTo(Date value) {
            addCriterionForJDBCDate("dateofbirth =", value, "dateOfBirth");
            return (Criteria) this;
        }

        public Criteria andDateOfBirthNotEqualTo(Date value) {
            addCriterionForJDBCDate("dateofbirth <>", value, "dateOfBirth");
            return (Criteria) this;
        }

        public Criteria andDateOfBirthGreaterThan(Date value) {
            addCriterionForJDBCDate("dateofbirth >", value, "dateOfBirth");
            return (Criteria) this;
        }

        public Criteria andDateOfBirthGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("dateofbirth >=", value, "dateOfBirth");
            return (Criteria) this;
        }

        public Criteria andDateOfBirthLessThan(Date value) {
            addCriterionForJDBCDate("dateofbirth <", value, "dateOfBirth");
            return (Criteria) this;
        }

        public Criteria andDateOfBirthLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("dateofbirth <=", value, "dateOfBirth");
            return (Criteria) this;
        }

        public Criteria andDateOfBirthIn(List<Date> values) {
            addCriterionForJDBCDate("dateofbirth in", values, "dateOfBirth");
            return (Criteria) this;
        }

        public Criteria andDateOfBirthNotIn(List<Date> values) {
            addCriterionForJDBCDate("dateofbirth not in", values, "dateOfBirth");
            return (Criteria) this;
        }

        public Criteria andDateOfBirthBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("dateofbirth between", value1, value2, "dateOfBirth");
            return (Criteria) this;
        }

        public Criteria andDateOfBirthNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("dateofbirth not between", value1, value2, "dateOfBirth");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNull() {
            addCriterion("userid is null");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("userid is not null");
            return (Criteria) this;
        }

        public Criteria andUserIdEqualTo(String value) {
            addCriterion("userid =", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotEqualTo(String value) {
            addCriterion("userid <>", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThan(String value) {
            addCriterion("userid >", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(String value) {
            addCriterion("userid >=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThan(String value) {
            addCriterion("userid <", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanOrEqualTo(String value) {
            addCriterion("userid <=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLike(String value) {
            addCriterion("userid like", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotLike(String value) {
            addCriterion("userid not like", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdIn(List<String> values) {
            addCriterion("userid in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotIn(List<String> values) {
            addCriterion("userid not in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdBetween(String value1, String value2) {
            addCriterion("userid between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotBetween(String value1, String value2) {
            addCriterion("userid not between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andHashedPasswordIsNull() {
            addCriterion("hashedpassword is null");
            return (Criteria) this;
        }

        public Criteria andHashedPasswordIsNotNull() {
            addCriterion("hashedpassword is not null");
            return (Criteria) this;
        }

        public Criteria andHashedPasswordEqualTo(String value) {
            addCriterion("hashedpassword =", value, "hashedPassword");
            return (Criteria) this;
        }

        public Criteria andHashedPasswordNotEqualTo(String value) {
            addCriterion("hashedpassword <>", value, "hashedPassword");
            return (Criteria) this;
        }

        public Criteria andHashedPasswordGreaterThan(String value) {
            addCriterion("hashedpassword >", value, "hashedPassword");
            return (Criteria) this;
        }

        public Criteria andHashedPasswordGreaterThanOrEqualTo(String value) {
            addCriterion("hashedpassword >=", value, "hashedPassword");
            return (Criteria) this;
        }

        public Criteria andHashedPasswordLessThan(String value) {
            addCriterion("hashedpassword <", value, "hashedPassword");
            return (Criteria) this;
        }

        public Criteria andHashedPasswordLessThanOrEqualTo(String value) {
            addCriterion("hashedpassword <=", value, "hashedPassword");
            return (Criteria) this;
        }

        public Criteria andHashedPasswordLike(String value) {
            addCriterion("hashedpassword like", value, "hashedPassword");
            return (Criteria) this;
        }

        public Criteria andHashedPasswordNotLike(String value) {
            addCriterion("hashedpassword not like", value, "hashedPassword");
            return (Criteria) this;
        }

        public Criteria andHashedPasswordIn(List<String> values) {
            addCriterion("hashedpassword in", values, "hashedPassword");
            return (Criteria) this;
        }

        public Criteria andHashedPasswordNotIn(List<String> values) {
            addCriterion("hashedpassword not in", values, "hashedPassword");
            return (Criteria) this;
        }

        public Criteria andHashedPasswordBetween(String value1, String value2) {
            addCriterion("hashedpassword between", value1, value2, "hashedPassword");
            return (Criteria) this;
        }

        public Criteria andHashedPasswordNotBetween(String value1, String value2) {
            addCriterion("hashedpassword not between", value1, value2, "hashedPassword");
            return (Criteria) this;
        }

        public Criteria andRoleIdIsNull() {
            addCriterion("roleid is null");
            return (Criteria) this;
        }

        public Criteria andRoleIdIsNotNull() {
            addCriterion("roleid is not null");
            return (Criteria) this;
        }

        public Criteria andRoleIdEqualTo(Integer value) {
            addCriterion("roleid =", value, "roleId");
            return (Criteria) this;
        }

        public Criteria andRoleIdNotEqualTo(Integer value) {
            addCriterion("roleid <>", value, "roleId");
            return (Criteria) this;
        }

        public Criteria andRoleIdGreaterThan(Integer value) {
            addCriterion("roleid >", value, "roleId");
            return (Criteria) this;
        }

        public Criteria andRoleIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("roleid >=", value, "roleId");
            return (Criteria) this;
        }

        public Criteria andRoleIdLessThan(Integer value) {
            addCriterion("roleid <", value, "roleId");
            return (Criteria) this;
        }

        public Criteria andRoleIdLessThanOrEqualTo(Integer value) {
            addCriterion("roleid <=", value, "roleId");
            return (Criteria) this;
        }

        public Criteria andRoleIdIn(List<Integer> values) {
            addCriterion("roleid in", values, "roleId");
            return (Criteria) this;
        }

        public Criteria andRoleIdNotIn(List<Integer> values) {
            addCriterion("roleid not in", values, "roleId");
            return (Criteria) this;
        }

        public Criteria andRoleIdBetween(Integer value1, Integer value2) {
            addCriterion("roleid between", value1, value2, "roleId");
            return (Criteria) this;
        }

        public Criteria andRoleIdNotBetween(Integer value1, Integer value2) {
            addCriterion("roleid not between", value1, value2, "roleId");
            return (Criteria) this;
        }

        public Criteria andCreatedDateIsNull() {
            addCriterion("createddate is null");
            return (Criteria) this;
        }

        public Criteria andCreatedDateIsNotNull() {
            addCriterion("createddate is not null");
            return (Criteria) this;
        }

        public Criteria andCreatedDateEqualTo(Date value) {
            addCriterionForJDBCDate("createddate =", value, "createdDate");
            return (Criteria) this;
        }

        public Criteria andCreatedDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("createddate <>", value, "createdDate");
            return (Criteria) this;
        }

        public Criteria andCreatedDateGreaterThan(Date value) {
            addCriterionForJDBCDate("createddate >", value, "createdDate");
            return (Criteria) this;
        }

        public Criteria andCreatedDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("createddate >=", value, "createdDate");
            return (Criteria) this;
        }

        public Criteria andCreatedDateLessThan(Date value) {
            addCriterionForJDBCDate("createddate <", value, "createdDate");
            return (Criteria) this;
        }

        public Criteria andCreatedDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("createddate <=", value, "createdDate");
            return (Criteria) this;
        }

        public Criteria andCreatedDateIn(List<Date> values) {
            addCriterionForJDBCDate("createddate in", values, "createdDate");
            return (Criteria) this;
        }

        public Criteria andCreatedDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("createddate not in", values, "createdDate");
            return (Criteria) this;
        }

        public Criteria andCreatedDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("createddate between", value1, value2, "createdDate");
            return (Criteria) this;
        }

        public Criteria andCreatedDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("createddate not between", value1, value2, "createdDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedDateIsNull() {
            addCriterion("lastupdateddate is null");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedDateIsNotNull() {
            addCriterion("lastupdateddate is not null");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedDateEqualTo(Date value) {
            addCriterionForJDBCDate("lastupdateddate =", value, "lastUpdatedDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("lastupdateddate <>", value, "lastUpdatedDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedDateGreaterThan(Date value) {
            addCriterionForJDBCDate("lastupdateddate >", value, "lastUpdatedDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("lastupdateddate >=", value, "lastUpdatedDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedDateLessThan(Date value) {
            addCriterionForJDBCDate("lastupdateddate <", value, "lastUpdatedDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("lastupdateddate <=", value, "lastUpdatedDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedDateIn(List<Date> values) {
            addCriterionForJDBCDate("lastupdateddate in", values, "lastUpdatedDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("lastupdateddate not in", values, "lastUpdatedDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("lastupdateddate between", value1, value2, "lastUpdatedDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("lastupdateddate not between", value1, value2, "lastUpdatedDate");
            return (Criteria) this;
        }

        public Criteria andProjectIdIsNull() {
            addCriterion("projectid is null");
            return (Criteria) this;
        }

        public Criteria andProjectIdIsNotNull() {
            addCriterion("projectid is not null");
            return (Criteria) this;
        }

        public Criteria andProjectIdEqualTo(Long value) {
            addCriterion("projectid =", value, "projectId");
            return (Criteria) this;
        }

        public Criteria andProjectIdNotEqualTo(Long value) {
            addCriterion("projectid <>", value, "projectId");
            return (Criteria) this;
        }

        public Criteria andProjectIdGreaterThan(Long value) {
            addCriterion("projectid >", value, "projectId");
            return (Criteria) this;
        }

        public Criteria andProjectIdGreaterThanOrEqualTo(Long value) {
            addCriterion("projectid >=", value, "projectId");
            return (Criteria) this;
        }

        public Criteria andProjectIdLessThan(Long value) {
            addCriterion("projectid <", value, "projectId");
            return (Criteria) this;
        }

        public Criteria andProjectIdLessThanOrEqualTo(Long value) {
            addCriterion("projectid <=", value, "projectId");
            return (Criteria) this;
        }

        public Criteria andProjectIdIn(List<Long> values) {
            addCriterion("projectid in", values, "projectId");
            return (Criteria) this;
        }

        public Criteria andProjectIdNotIn(List<Long> values) {
            addCriterion("projectid not in", values, "projectId");
            return (Criteria) this;
        }

        public Criteria andProjectIdBetween(Long value1, Long value2) {
            addCriterion("projectid between", value1, value2, "projectId");
            return (Criteria) this;
        }

        public Criteria andProjectIdNotBetween(Long value1, Long value2) {
            addCriterion("projectid not between", value1, value2, "projectId");
            return (Criteria) this;
        }

        public Criteria andClientTypeIdIsNull() {
            addCriterion("clienttypeid is null");
            return (Criteria) this;
        }

        public Criteria andClientTypeIdIsNotNull() {
            addCriterion("clienttypeid is not null");
            return (Criteria) this;
        }

        public Criteria andClientTypeIdEqualTo(Integer value) {
            addCriterion("clienttypeid =", value, "clientTypeId");
            return (Criteria) this;
        }

        public Criteria andClientTypeIdNotEqualTo(Integer value) {
            addCriterion("clienttypeid <>", value, "clientTypeId");
            return (Criteria) this;
        }

        public Criteria andClientTypeIdGreaterThan(Integer value) {
            addCriterion("clienttypeid >", value, "clientTypeId");
            return (Criteria) this;
        }

        public Criteria andClientTypeIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("clienttypeid >=", value, "clientTypeId");
            return (Criteria) this;
        }

        public Criteria andClientTypeIdLessThan(Integer value) {
            addCriterion("clienttypeid <", value, "clientTypeId");
            return (Criteria) this;
        }

        public Criteria andClientTypeIdLessThanOrEqualTo(Integer value) {
            addCriterion("clienttypeid <=", value, "clientTypeId");
            return (Criteria) this;
        }

        public Criteria andClientTypeIdIn(List<Integer> values) {
            addCriterion("clienttypeid in", values, "clientTypeId");
            return (Criteria) this;
        }

        public Criteria andClientTypeIdNotIn(List<Integer> values) {
            addCriterion("clienttypeid not in", values, "clientTypeId");
            return (Criteria) this;
        }

        public Criteria andClientTypeIdBetween(Integer value1, Integer value2) {
            addCriterion("clienttypeid between", value1, value2, "clientTypeId");
            return (Criteria) this;
        }

        public Criteria andClientTypeIdNotBetween(Integer value1, Integer value2) {
            addCriterion("clienttypeid not between", value1, value2, "clientTypeId");
            return (Criteria) this;
        }

        public Criteria andClientStateIdIsNull() {
            addCriterion("clientstateid is null");
            return (Criteria) this;
        }

        public Criteria andClientStateIdIsNotNull() {
            addCriterion("clientstateid is not null");
            return (Criteria) this;
        }

        public Criteria andClientStateIdEqualTo(Integer value) {
            addCriterion("clientstateid =", value, "clientStateId");
            return (Criteria) this;
        }

        public Criteria andClientStateIdNotEqualTo(Integer value) {
            addCriterion("clientstateid <>", value, "clientStateId");
            return (Criteria) this;
        }

        public Criteria andClientStateIdGreaterThan(Integer value) {
            addCriterion("clientstateid >", value, "clientStateId");
            return (Criteria) this;
        }

        public Criteria andClientStateIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("clientstateid >=", value, "clientStateId");
            return (Criteria) this;
        }

        public Criteria andClientStateIdLessThan(Integer value) {
            addCriterion("clientstateid <", value, "clientStateId");
            return (Criteria) this;
        }

        public Criteria andClientStateIdLessThanOrEqualTo(Integer value) {
            addCriterion("clientstateid <=", value, "clientStateId");
            return (Criteria) this;
        }

        public Criteria andClientStateIdIn(List<Integer> values) {
            addCriterion("clientstateid in", values, "clientStateId");
            return (Criteria) this;
        }

        public Criteria andClientStateIdNotIn(List<Integer> values) {
            addCriterion("clientstateid not in", values, "clientStateId");
            return (Criteria) this;
        }

        public Criteria andClientStateIdBetween(Integer value1, Integer value2) {
            addCriterion("clientstateid between", value1, value2, "clientStateId");
            return (Criteria) this;
        }

        public Criteria andClientStateIdNotBetween(Integer value1, Integer value2) {
            addCriterion("clientstateid not between", value1, value2, "clientStateId");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table client
     *
     * @mbggenerated do_not_delete_during_merge Wed May 22 17:15:02 PKT 2013
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table client
     *
     * @mbggenerated Wed May 22 17:15:02 PKT 2013
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}